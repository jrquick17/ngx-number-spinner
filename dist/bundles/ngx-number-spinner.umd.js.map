{"version":3,"file":"ngx-number-spinner.umd.js","sources":["../../src/app/components/ngx-number-spinner/ngx-number-spinner.component.ts","../../src/app/ngx-number-spinner.module.ts","../../src/main.ts","../../src/ngx-number-spinner.ts"],"sourcesContent":["import { Component, Input, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector:    'ngx-number-spinner',\n  templateUrl: './ngx-number-spinner.component.html',\n  styleUrls: [\n    './ngx-number-spinner.component.scss'\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxNumberSpinnerComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgxNumberSpinnerComponent implements ControlValueAccessor {\n  @Input('value') value: number = 0;\n  @Input('step') step: number = 1;\n  @Input('min') min: number;\n  @Input('max') max: number;\n  @Input('direction') direction: 'horizontal'|'vertical' = 'horizontal';\n\n  @Output('change') change: EventEmitter<number> = new EventEmitter();\n\n  disabled: boolean;\n\n  _propagateChange:any = () => {};\n  _onTouched: () => void;\n\n  constructor() { }\n\n  writeValue(value:number):void {\n    this.value = value || 0;\n  }\n\n  registerOnChange(fn:any):void {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn:any):void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled:boolean):void {\n    this.disabled = isDisabled;\n  }\n\n  inc():void {\n    this.value += this.step;\n    this._onChange();\n  }\n\n  dec():void {\n    this.value -= this.step;\n\n    this._onChange();\n  }\n\n  private _onChange():void {\n    this._propagateChange(this.value);\n\n    this.change.emit(this.value);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { NgxNumberSpinnerComponent } from './components/ngx-number-spinner/ngx-number-spinner.component';\n\n@NgModule({\n  declarations: [\n    NgxNumberSpinnerComponent\n  ],\n  exports: [\n    NgxNumberSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgxNumberSpinnerModule { }\n","/*\n * Public API Surface of ngx-number-spinner\n */\nexport * from './app/components/ngx-number-spinner/ngx-number-spinner.component';\n\nexport * from './app/ngx-number-spinner.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './main';\n"],"names":["EventEmitter","Component","NG_VALUE_ACCESSOR","forwardRef","Input","Output","NgModule","CommonModule"],"mappings":";;;;;;;QA+BE;YAbgB,UAAK,GAAW,CAAC,CAAC;YACnB,SAAI,GAAW,CAAC,CAAC;YAGZ,cAAS,GAA4B,YAAY,CAAC;YAEpD,WAAM,GAAyB,IAAIA,iBAAY,EAAE,CAAC;YAIpE,qBAAgB,GAAO,eAAQ,CAAC;SAGf;QAEjB,8CAAU,GAAV,UAAW,KAAY;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;SACzB;QAED,oDAAgB,GAAhB,UAAiB,EAAM;YACrB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC5B;QAED,qDAAiB,GAAjB,UAAkB,EAAM;YACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACtB;QAED,oDAAgB,GAAhB,UAAkB,UAAkB;YAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC5B;QAED,uCAAG,GAAH;YACE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;YACxB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAED,uCAAG,GAAH;YACE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;YAExB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAEO,6CAAS,GAAT;YACN,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAElC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9B;;;;gBA7DFC,cAAS,SAAC;oBACT,QAAQ,EAAK,oBAAoB;oBACjC,07BAAkD;oBAIlD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAEC,uBAAiB;4BAC1B,WAAW,EAAEC,eAAU,CAAC,cAAM,OAAA,yBAAyB,GAAA,CAAC;4BACxD,KAAK,EAAE,IAAI;yBACZ;qBACF;;iBACF;;;;wBAEEC,UAAK,SAAC,OAAO;uBACbA,UAAK,SAAC,MAAM;sBACZA,UAAK,SAAC,KAAK;sBACXA,UAAK,SAAC,KAAK;4BACXA,UAAK,SAAC,WAAW;yBAEjBC,WAAM,SAAC,QAAQ;;;;QCPlB;;;;;gBAXCC,aAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,yBAAyB;qBAC1B;oBACD,OAAO,EAAE;wBACP,yBAAyB;qBAC1B;oBACD,OAAO,EAAE;wBACPC,mBAAY;qBACb;iBACF;;;IChBD;;;;ICAA;;;;;;;;;;;;;"}