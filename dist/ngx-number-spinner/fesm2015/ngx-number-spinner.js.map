{"version":3,"file":"ngx-number-spinner.js","sources":["../../../projects/ngx-number-spinner/src/lib/ngx-number-spinner/ngx-number-spinner.component.ts","../../../projects/ngx-number-spinner/src/lib/ngx-number-spinner/ngx-number-spinner.component.html","../../../projects/ngx-number-spinner/src/lib/ngx-number-spinner.module.ts","../../../projects/ngx-number-spinner/src/public-api.ts","../../../projects/ngx-number-spinner/src/ngx-number-spinner.ts"],"sourcesContent":["import { Component, Input, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector:    'ngx-number-spinner',\n  templateUrl: './ngx-number-spinner.component.html',\n  styleUrls: [\n    './ngx-number-spinner.component.scss'\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxNumberSpinnerComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgxNumberSpinnerComponent implements ControlValueAccessor {\n  @Input('value') value: number = 0;\n  @Input('step') step: number = 1;\n  @Input('min') min: number;\n  @Input('max') max: number;\n  @Input('direction') direction: 'horizontal'|'vertical' = 'horizontal';\n\n  @Output('change') change: EventEmitter<number> = new EventEmitter();\n\n  disabled: boolean;\n\n  _propagateChange:any = () => {};\n  _onTouched: () => void;\n\n  constructor() { }\n\n  writeValue(value:number):void {\n    this.value = value || 0;\n  }\n\n  registerOnChange(fn:any):void {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn:any):void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled:boolean):void {\n    this.disabled = isDisabled;\n  }\n\n  inc():void {\n    this.value += this.step;\n    this._onChange();\n  }\n\n  dec():void {\n    this.value -= this.step;\n\n    this._onChange();\n  }\n\n  private _onChange():void {\n    this._propagateChange(this.value);\n\n    this.change.emit(this.value);\n  }\n}\n","<div class=\"wrapper\"\n     [ngClass]=\"{ 'horizontal-wrapper': direction === 'horizontal', 'vertical-wrapper': direction === 'vertical' }\">\n    <button type=\"button\"\n            [class.ripple]=\"!min || value > min\"\n            (click)=\"dec()\"\n            [disabled]=\"value <= min\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M19 13H5v-2h14v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </svg>\n    </button>\n\n    <div>{{ value }}</div>\n\n    <button type=\"button\"\n            [class.ripple]=\"!max || value < max\"\n            (click)=\"inc()\"\n            [disabled]=\"value >= max\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </svg>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { NgxNumberSpinnerComponent } from './ngx-number-spinner/ngx-number-spinner.component';\n\n@NgModule({\n  declarations: [\n    NgxNumberSpinnerComponent\n  ],\n  exports: [\n    NgxNumberSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgxNumberSpinnerModule { }\n","/*\n * Public API Surface of ngx-number-spinner\n */\nexport * from './lib/ngx-number-spinner/ngx-number-spinner.component';\nexport * from './lib/ngx-number-spinner.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵnamespaceSVG","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵnamespaceHTML","i0.ɵɵtext","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵclassProp","i0.ɵɵtextInterpolate"],"mappings":";;;;;MAiBa,yBAAyB;IAcpC;QAbgB,UAAK,GAAW,CAAC,CAAC;QACnB,SAAI,GAAW,CAAC,CAAC;QAGZ,cAAS,GAA4B,YAAY,CAAC;QAEpD,WAAM,GAAyB,IAAI,YAAY,EAAE,CAAC;QAIpE,qBAAgB,GAAO,SAAQ,CAAC;KAGf;IAEjB,UAAU,CAAC,KAAY;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;KACzB;IAED,gBAAgB,CAAC,EAAM;QACrB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAC5B;IAED,iBAAiB,CAAC,EAAM;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACtB;IAED,gBAAgB,CAAE,UAAkB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;IAED,GAAG;QACD,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAED,GAAG;QACD,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;QAExB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAEO,SAAS;QACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;;kGA/CU,yBAAyB;2DAAzB,yBAAyB,8LARzB;YACT;gBACE,OAAO,EAAE,iBAAiB;gBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,yBAAyB,CAAC;gBACxD,KAAK,EAAE,IAAI;aACZ;SACF;QCfHA,2BAEI;QAAAA,8BAII;QAFIC,mGAAS,SAAK,IAAC;QAEnBC,gBACE;QADFF,2BACE;QAAAG,uBAA6B;QAAAA,uBAC/B;QAAAC,cAAM;QACVA,cAAS;QAETC,iBAAK;QAALL,wBAAK;QAAAM,SAAW;QAAAF,cAAM;QAEtBJ,8BAII;QAFIC,mGAAS,SAAK,IAAC;QAEnBC,gBACE;QADFF,2BACE;QAAAG,uBAA+C;QAAAA,wBACjD;QAAAC,cAAM;QACVA,cAAS;QACbA,cAAM;;QApBDG,4GAA8G;QAEvGC,YAAoC;QAApCC,sDAAoC;QAEpCF,4CAAyB;QAM5BC,YAAW;QAAXE,4BAAW;QAGRF,YAAoC;QAApCC,sDAAoC;QAEpCF,4CAAyB;;+CDCxB,yBAAyB;cAdrC,SAAS;eAAC;gBACT,QAAQ,EAAK,oBAAoB;gBACjC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE;oBACT,qCAAqC;iBACtC;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,yBAAyB,CAAC;wBACxD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;kBAEE,KAAK;mBAAC,OAAO;;kBACb,KAAK;mBAAC,MAAM;;kBACZ,KAAK;mBAAC,KAAK;;kBACX,KAAK;mBAAC,KAAK;;kBACX,KAAK;mBAAC,WAAW;;kBAEjB,MAAM;mBAAC,QAAQ;;;MEPL,sBAAsB;;uDAAtB,sBAAsB;wHAAtB,sBAAsB,kBAJxB;YACP,YAAY;SACb;qFAEU,sBAAsB,mBAT/B,yBAAyB,aAMzB,YAAY,aAHZ,yBAAyB;+CAMhB,sBAAsB;cAXlC,QAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,yBAAyB;iBAC1B;gBACD,OAAO,EAAE;oBACP,yBAAyB;iBAC1B;gBACD,OAAO,EAAE;oBACP,YAAY;iBACb;aACF;;;AChBD;;;;ACAA;;;;;;"}