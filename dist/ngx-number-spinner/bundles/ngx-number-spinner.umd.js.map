{"version":3,"file":"ngx-number-spinner.umd.js","sources":["../../../projects/ngx-number-spinner/src/lib/ngx-number-spinner/ngx-number-spinner.component.ts","../../../projects/ngx-number-spinner/src/lib/ngx-number-spinner/ngx-number-spinner.component.html","../../../projects/ngx-number-spinner/src/lib/ngx-number-spinner.module.ts","../../../projects/ngx-number-spinner/src/public-api.ts","../../../projects/ngx-number-spinner/src/ngx-number-spinner.ts"],"sourcesContent":["import { Component, Input, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector:    'ngx-number-spinner',\n  templateUrl: './ngx-number-spinner.component.html',\n  styleUrls: [\n    './ngx-number-spinner.component.scss'\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxNumberSpinnerComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgxNumberSpinnerComponent implements ControlValueAccessor {\n  @Input('value') value: number = 0;\n  @Input('step') step: number = 1;\n  @Input('min') min: number;\n  @Input('max') max: number;\n  @Input('direction') direction: 'horizontal'|'vertical' = 'horizontal';\n\n  @Output('change') change: EventEmitter<number> = new EventEmitter();\n\n  disabled: boolean;\n\n  _propagateChange:any = () => {};\n  _onTouched: () => void;\n\n  constructor() { }\n\n  writeValue(value:number):void {\n    this.value = value || 0;\n  }\n\n  registerOnChange(fn:any):void {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn:any):void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled:boolean):void {\n    this.disabled = isDisabled;\n  }\n\n  inc():void {\n    this.value += this.step;\n    this._onChange();\n  }\n\n  dec():void {\n    this.value -= this.step;\n\n    this._onChange();\n  }\n\n  private _onChange():void {\n    this._propagateChange(this.value);\n\n    this.change.emit(this.value);\n  }\n}\n","<div class=\"wrapper\"\n     [ngClass]=\"{ 'horizontal-wrapper': direction === 'horizontal', 'vertical-wrapper': direction === 'vertical' }\">\n    <button type=\"button\"\n            [class.ripple]=\"!min || value > min\"\n            (click)=\"dec()\"\n            [disabled]=\"value <= min\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M19 13H5v-2h14v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </svg>\n    </button>\n\n    <div>{{ value }}</div>\n\n    <button type=\"button\"\n            [class.ripple]=\"!max || value < max\"\n            (click)=\"inc()\"\n            [disabled]=\"value >= max\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </svg>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { NgxNumberSpinnerComponent } from './ngx-number-spinner/ngx-number-spinner.component';\n\n@NgModule({\n  declarations: [\n    NgxNumberSpinnerComponent\n  ],\n  exports: [\n    NgxNumberSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgxNumberSpinnerModule { }\n","/*\n * Public API Surface of ngx-number-spinner\n */\nexport * from './lib/ngx-number-spinner/ngx-number-spinner.component';\nexport * from './lib/ngx-number-spinner.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","NG_VALUE_ACCESSOR","forwardRef","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵnamespaceSVG","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵnamespaceHTML","i0.ɵɵtext","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵclassProp","i0.ɵɵtextInterpolate","Component","Input","Output","CommonModule","NgModule"],"mappings":";;;;;;;;QA+BE;YAbgB,UAAK,GAAW,CAAC,CAAC;YACnB,SAAI,GAAW,CAAC,CAAC;YAGZ,cAAS,GAA4B,YAAY,CAAC;YAEpD,WAAM,GAAyB,IAAIA,eAAY,EAAE,CAAC;YAIpE,qBAAgB,GAAO,eAAQ,CAAC;SAGf;QAEjB,8CAAU,GAAV,UAAW,KAAY;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;SACzB;QAED,oDAAgB,GAAhB,UAAiB,EAAM;YACrB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC5B;QAED,qDAAiB,GAAjB,UAAkB,EAAM;YACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACtB;QAED,oDAAgB,GAAhB,UAAkB,UAAkB;YAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC5B;QAED,uCAAG,GAAH;YACE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;YACxB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAED,uCAAG,GAAH;YACE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;YAExB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAEO,6CAAS,GAAT;YACN,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAElC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9B;;;sGA/CU,yBAAyB;kEAAzB,yBAAyB,iMARzB;gBACT;oBACE,OAAO,EAAEC,uBAAiB;oBAC1B,WAAW,EAAEC,aAAU,CAAC,cAAM,OAAA,yBAAyB,GAAA,CAAC;oBACxD,KAAK,EAAE,IAAI;iBACZ;aACF;;gBCfHC,8BAEI;gBAAAA,iCAII;gBAFIC,sGAAS,SAAK,IAAC;gBAEnBC,mBACE;gBADFF,8BACE;gBAAAG,0BAA6B;gBAAAA,0BAC/B;gBAAAC,iBAAM;gBACVA,iBAAS;gBAETC,oBAAK;gBAALL,2BAAK;gBAAAM,YAAW;gBAAAF,iBAAM;gBAEtBJ,iCAII;gBAFIC,sGAAS,SAAK,IAAC;gBAEnBC,mBACE;gBADFF,8BACE;gBAAAG,0BAA+C;gBAAAA,2BACjD;gBAAAC,iBAAM;gBACVA,iBAAS;gBACbA,iBAAM;;;gBApBDG,kHAA8G;gBAEvGC,eAAoC;gBAApCC,yDAAoC;gBAEpCF,+CAAyB;gBAM5BC,eAAW;gBAAXE,+BAAW;gBAGRF,eAAoC;gBAApCC,yDAAoC;gBAEpCF,+CAAyB;;;;6BDCxB,yBAAyB;sBAdrCI,YAAS;uBAAC;wBACT,QAAQ,EAAK,oBAAoB;wBACjC,WAAW,EAAE,qCAAqC;wBAClD,SAAS,EAAE;4BACT,qCAAqC;yBACtC;wBACD,SAAS,EAAE;4BACT;gCACE,OAAO,EAAEb,uBAAiB;gCAC1B,WAAW,EAAEC,aAAU,CAAC,cAAM,OAAA,yBAAyB,GAAA,CAAC;gCACxD,KAAK,EAAE,IAAI;6BACZ;yBACF;qBACF;8CAEiB,KAAK;0BAApBa,QAAK;2BAAC,OAAO;oBACC,IAAI;0BAAlBA,QAAK;2BAAC,MAAM;oBACC,GAAG;0BAAhBA,QAAK;2BAAC,KAAK;oBACE,GAAG;0BAAhBA,QAAK;2BAAC,KAAK;oBACQ,SAAS;0BAA5BA,QAAK;2BAAC,WAAW;oBAEA,MAAM;0BAAvBC,SAAM;2BAAC,QAAQ;;;;;QEPlB;;;;8DAAa,sBAAsB;+HAAtB,sBAAsB,kBAJxB;gBACPC,eAAY;aACb;4FAEU,sBAAsB,mBAT/B,yBAAyB,aAMzBA,eAAY,aAHZ,yBAAyB;;6BAMhB,sBAAsB;sBAXlCC,WAAQ;uBAAC;wBACR,YAAY,EAAE;4BACZ,yBAAyB;yBAC1B;wBACD,OAAO,EAAE;4BACP,yBAAyB;yBAC1B;wBACD,OAAO,EAAE;4BACPD,eAAY;yBACb;qBACF;;;;IChBD;;;;ICAA;;;;;;;;;;;;;;;"}