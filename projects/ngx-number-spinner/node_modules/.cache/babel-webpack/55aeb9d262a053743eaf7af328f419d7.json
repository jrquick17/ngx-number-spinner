{"ast":null,"code":"import _classCallCheck from \"/Users/jrquick/development/encounting/ngx-number-spinner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jrquick/development/encounting/ngx-number-spinner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, ɵɵdefineComponent, ɵɵProvidersFeature, forwardRef, ɵɵelementStart, ɵɵlistener, ɵɵnamespaceSVG, ɵɵelement, ɵɵelementEnd, ɵɵnamespaceHTML, ɵɵtext, ɵɵproperty, ɵɵpureFunction2, ɵɵadvance, ɵɵclassProp, ɵɵtextInterpolate, ɵsetClassMetadata, Component, Input, Output, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgClass, CommonModule } from '@angular/common';\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    \"horizontal-wrapper\": a0,\n    \"vertical-wrapper\": a1\n  };\n};\n\nvar NgxNumberSpinnerComponent = /*#__PURE__*/function () {\n  function NgxNumberSpinnerComponent() {\n    _classCallCheck(this, NgxNumberSpinnerComponent);\n\n    this.value = 0;\n    this.step = 1;\n    this.direction = 'horizontal';\n    this.change = new EventEmitter();\n\n    this._propagateChange = function () {};\n  }\n\n  _createClass(NgxNumberSpinnerComponent, [{\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value || 0;\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._propagateChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"inc\",\n    value: function inc() {\n      this.value += this.step;\n\n      this._onChange();\n    }\n  }, {\n    key: \"dec\",\n    value: function dec() {\n      this.value -= this.step;\n\n      this._onChange();\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      this._propagateChange(this.value);\n\n      this.change.emit(this.value);\n    }\n  }]);\n\n  return NgxNumberSpinnerComponent;\n}();\n\nNgxNumberSpinnerComponent.ɵfac = function NgxNumberSpinnerComponent_Factory(t) {\n  return new (t || NgxNumberSpinnerComponent)();\n};\n\nNgxNumberSpinnerComponent.ɵcmp = ɵɵdefineComponent({\n  type: NgxNumberSpinnerComponent,\n  selectors: [[\"ngx-number-spinner\"]],\n  inputs: {\n    value: \"value\",\n    step: \"step\",\n    min: \"min\",\n    max: \"max\",\n    direction: \"direction\"\n  },\n  outputs: {\n    change: \"change\"\n  },\n  features: [ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NgxNumberSpinnerComponent;\n    }),\n    multi: true\n  }])],\n  decls: 11,\n  vars: 11,\n  consts: [[1, \"wrapper\", 3, \"ngClass\"], [\"type\", \"button\", 3, \"disabled\", \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\"], [\"d\", \"M19 13H5v-2h14v2z\"], [\"d\", \"M0 0h24v24H0z\", \"fill\", \"none\"], [\"d\", \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"]],\n  template: function NgxNumberSpinnerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵɵelementStart(0, \"div\", 0);\n      ɵɵelementStart(1, \"button\", 1);\n      ɵɵlistener(\"click\", function NgxNumberSpinnerComponent_Template_button_click_1_listener() {\n        return ctx.dec();\n      });\n      ɵɵnamespaceSVG();\n      ɵɵelementStart(2, \"svg\", 2);\n      ɵɵelement(3, \"path\", 3);\n      ɵɵelement(4, \"path\", 4);\n      ɵɵelementEnd();\n      ɵɵelementEnd();\n      ɵɵnamespaceHTML();\n      ɵɵelementStart(5, \"div\");\n      ɵɵtext(6);\n      ɵɵelementEnd();\n      ɵɵelementStart(7, \"button\", 1);\n      ɵɵlistener(\"click\", function NgxNumberSpinnerComponent_Template_button_click_7_listener() {\n        return ctx.inc();\n      });\n      ɵɵnamespaceSVG();\n      ɵɵelementStart(8, \"svg\", 2);\n      ɵɵelement(9, \"path\", 5);\n      ɵɵelement(10, \"path\", 4);\n      ɵɵelementEnd();\n      ɵɵelementEnd();\n      ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵɵproperty(\"ngClass\", ɵɵpureFunction2(8, _c0, ctx.direction === \"horizontal\", ctx.direction === \"vertical\"));\n      ɵɵadvance(1);\n      ɵɵclassProp(\"ripple\", !ctx.min || ctx.value > ctx.min);\n      ɵɵproperty(\"disabled\", ctx.value <= ctx.min);\n      ɵɵadvance(5);\n      ɵɵtextInterpolate(ctx.value);\n      ɵɵadvance(1);\n      ɵɵclassProp(\"ripple\", !ctx.max || ctx.value < ctx.max);\n      ɵɵproperty(\"disabled\", ctx.value >= ctx.max);\n    }\n  },\n  directives: [NgClass],\n  styles: [\"input[type=number][_ngcontent-%COMP%]::-webkit-inner-spin-button, input[type=number][_ngcontent-%COMP%]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.wrapper[_ngcontent-%COMP%]{max-width:200px}.wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:0;overflow:hidden;padding:.5rem}.wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none}.wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{cursor:not-allowed}.wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled   svg[_ngcontent-%COMP%]{fill:rgba(0,0,0,.26)}.wrapper[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{align-items:center;flex:1;font-size:1rem;min-width:30px;padding:0 .5rem;text-align:center;vertical-align:unset}.horizontal-wrapper[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.12);border-radius:8px;display:flex;justify-content:space-between}.horizontal-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:first-child{border-bottom-left-radius:7px;border-top-left-radius:7px}.horizontal-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child{border-bottom-right-radius:7px;border-top-right-radius:7px}.horizontal-wrapper[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{border-left:1px solid rgba(0,0,0,.12);border-right:1px solid rgba(0,0,0,.12);display:flex;justify-content:center}.vertical-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:first-child{border:1px solid rgba(0,0,0,.12);border-radius:10px 10px 0 0;width:100%}.vertical-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child{border:1px solid rgba(0,0,0,.12);border-radius:0 0 10px 10px;width:100%}.vertical-wrapper[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{border-left:1px solid rgba(0,0,0,.12);border-right:1px solid rgba(0,0,0,.12);padding:.5rem}.ripple[_ngcontent-%COMP%]{background-position:50%;transition:background .3s}.ripple[_ngcontent-%COMP%]:hover{background:rgba(0,0,0,.12) radial-gradient(circle,transparent 1%,rgba(0,0,0,.12) 0) 50%/15000%;cursor:pointer}.ripple[_ngcontent-%COMP%]:active{background-color:rgba(0,0,0,.12);background-size:100%;transition:background 0s}\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵsetClassMetadata(NgxNumberSpinnerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-number-spinner',\n      templateUrl: './ngx-number-spinner.component.html',\n      styleUrls: ['./ngx-number-spinner.component.scss'],\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NgxNumberSpinnerComponent;\n        }),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [];\n  }, {\n    value: [{\n      type: Input,\n      args: ['value']\n    }],\n    step: [{\n      type: Input,\n      args: ['step']\n    }],\n    min: [{\n      type: Input,\n      args: ['min']\n    }],\n    max: [{\n      type: Input,\n      args: ['max']\n    }],\n    direction: [{\n      type: Input,\n      args: ['direction']\n    }],\n    change: [{\n      type: Output,\n      args: ['change']\n    }]\n  });\n})();\n\nvar NgxNumberSpinnerModule = function NgxNumberSpinnerModule() {\n  _classCallCheck(this, NgxNumberSpinnerModule);\n};\n\nNgxNumberSpinnerModule.ɵmod = ɵɵdefineNgModule({\n  type: NgxNumberSpinnerModule\n});\nNgxNumberSpinnerModule.ɵinj = ɵɵdefineInjector({\n  factory: function NgxNumberSpinnerModule_Factory(t) {\n    return new (t || NgxNumberSpinnerModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(NgxNumberSpinnerModule, {\n    declarations: [NgxNumberSpinnerComponent],\n    imports: [CommonModule],\n    exports: [NgxNumberSpinnerComponent]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵsetClassMetadata(NgxNumberSpinnerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxNumberSpinnerComponent],\n      exports: [NgxNumberSpinnerComponent],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-number-spinner\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NgxNumberSpinnerComponent, NgxNumberSpinnerModule };","map":{"version":3,"sources":["../../../projects/ngx-number-spinner/src/lib/ngx-number-spinner/ngx-number-spinner.component.ts","../../../projects/ngx-number-spinner/src/lib/ngx-number-spinner/ngx-number-spinner.component.html","../../../projects/ngx-number-spinner/src/lib/ngx-number-spinner.module.ts","../../../projects/ngx-number-spinner/src/public-api.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵlistener","i0.ɵɵnamespaceSVG","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵnamespaceHTML","i0.ɵɵtext"],"mappings":";;;;;;;;;;;;;IAiBa,yB;AAcX,uCAAA;AAAA;;AAbgB,SAAA,KAAA,GAAgB,CAAhB;AACD,SAAA,IAAA,GAAe,CAAf;AAGK,SAAA,SAAA,GAAqC,YAArC;AAEF,SAAA,MAAA,GAA+B,IAAI,YAAJ,EAA/B;;AAIlB,SAAA,gBAAA,GAAuB,YAAA,CAAQ,CAA/B;AAGiB;;;;+BAEN,K,EAAY;AACrB,WAAK,KAAL,GAAa,KAAK,IAAI,CAAtB;AACD;;;qCAEgB,E,EAAM;AACrB,WAAK,gBAAL,GAAwB,EAAxB;AACD;;;sCAEiB,E,EAAM;AACtB,WAAK,UAAL,GAAkB,EAAlB;AACD;;;qCAEiB,U,EAAkB;AAClC,WAAK,QAAL,GAAgB,UAAhB;AACD;;;0BAEE;AACD,WAAK,KAAL,IAAc,KAAK,IAAnB;;AACA,WAAK,SAAL;AACD;;;0BAEE;AACD,WAAK,KAAL,IAAc,KAAK,IAAnB;;AAEA,WAAK,SAAL;AACD;;;gCAEgB;AACf,WAAK,gBAAL,CAAsB,KAAK,KAA3B;;AAEA,WAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,KAAtB;AACD;;;;;;;mBA/CU,yB;AAAyB,C;;;QAAzB,yB;AAAyB,EAAA,SAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,C;AAAA,EAAA,MAAA,EAAA;AAAA,IAAA,KAAA,EAAA,OAAA;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,GAAA,EAAA,KAAA;AAAA,IAAA,GAAA,EAAA,KAAA;AAAA,IAAA,SAAA,EAAA;AAAA,G;AAAA,EAAA,OAAA,EAAA;AAAA,IAAA,MAAA,EAAA;AAAA,G;AAAA,EAAA,QAAA,EAAA,CAAA,kBAAA,CARzB,CACT;AACE,IAAA,OAAO,EAAE,iBADX;AAEE,IAAA,WAAW,EAAE,UAAU,CAAC;AAAA,aAAM,yBAAN;AAAA,KAAD,CAFzB;AAGE,IAAA,KAAK,EAAE;AAHT,GADS,CAQyB,CAAA,C;AAFnC,EAAA,KAAA,EAAA,E;AAAA,EAAA,IAAA,EAAA,E;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,CAAA,EAAA,UAAA,EAAA,OAAA,CAAA,EAAA,CAAA,OAAA,EAAA,4BAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,SAAA,EAAA,WAAA,CAAA,EAAA,CAAA,GAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,GAAA,EAAA,eAAA,EAAA,MAAA,EAAA,MAAA,CAAA,EAAA,CAAA,GAAA,EAAA,qCAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,kCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACfHA,MAAAA,cAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,CAAAA,CAAAA;AAEIA,MAAAA,cAAAA,CAAAA,CAAAA,EAAAA,QAAAA,EAAAA,CAAAA,CAAAA;AAEQG,MAAAA,UAAAA,CAAAA,OAAAA,EAAAA,SAAAA,0DAAAA,GAAAA;AAAAA,eAAS,GAAA,CAAA,GAAA,EAATA;AAAc,OAAdA,CAAAA;AAEJC,MAAAA,cAAAA;AAAAA,MAAAA,cAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,CAAAA,CAAAA;AACEC,MAAAA,SAAAA,CAAAA,CAAAA,EAAAA,MAAAA,EAAAA,CAAAA,CAAAA;AAA6BA,MAAAA,SAAAA,CAAAA,CAAAA,EAAAA,MAAAA,EAAAA,CAAAA,CAAAA;AAC/BC,MAAAA,YAAAA;AACJA,MAAAA,YAAAA;AAEAC,MAAAA,eAAAA;AAAAA,MAAAA,cAAAA,CAAAA,CAAAA,EAAAA,KAAAA,CAAAA;AAAKC,MAAAA,MAAAA,CAAAA,CAAAA,CAAAA;AAAWF,MAAAA,YAAAA;AAEhBN,MAAAA,cAAAA,CAAAA,CAAAA,EAAAA,QAAAA,EAAAA,CAAAA,CAAAA;AAEQG,MAAAA,UAAAA,CAAAA,OAAAA,EAAAA,SAAAA,0DAAAA,GAAAA;AAAAA,eAAS,GAAA,CAAA,GAAA,EAATA;AAAc,OAAdA,CAAAA;AAEJC,MAAAA,cAAAA;AAAAA,MAAAA,cAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,CAAAA,CAAAA;AACEC,MAAAA,SAAAA,CAAAA,CAAAA,EAAAA,MAAAA,EAAAA,CAAAA,CAAAA;AAA+CA,MAAAA,SAAAA,CAAAA,EAAAA,EAAAA,MAAAA,EAAAA,CAAAA,CAAAA;AACjDC,MAAAA,YAAAA;AACJA,MAAAA,YAAAA;AACJA,MAAAA,YAAAA;;;;AApBKL,MAAAA,UAAAA,CAAAA,SAAAA,EAAAA,eAAAA,CAAAA,CAAAA,EAAAA,GAAAA,EAAAA,GAAAA,CAAAA,SAAAA,KAAAA,YAAAA,EAAAA,GAAAA,CAAAA,SAAAA,KAAAA,UAAAA,CAAAA,CAAAA;AAEOC,MAAAA,SAAAA,CAAAA,CAAAA,CAAAA;AAAAA,MAAAA,WAAAA,CAAAA,QAAAA,EAAAA,CAAAA,GAAAA,CAAAA,GAAAA,IAAAA,GAAAA,CAAAA,KAAAA,GAAAA,GAAAA,CAAAA,GAAAA,CAAAA;AAEAD,MAAAA,UAAAA,CAAAA,UAAAA,EAAAA,GAAAA,CAAAA,KAAAA,IAAAA,GAAAA,CAAAA,GAAAA,CAAAA;AAMHO,MAAAA,SAAAA,CAAAA,CAAAA,CAAAA;AAAAA,MAAAA,iBAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA;AAGGN,MAAAA,SAAAA,CAAAA,CAAAA,CAAAA;AAAAA,MAAAA,WAAAA,CAAAA,QAAAA,EAAAA,CAAAA,GAAAA,CAAAA,GAAAA,IAAAA,GAAAA,CAAAA,KAAAA,GAAAA,GAAAA,CAAAA,GAAAA,CAAAA;AAEAD,MAAAA,UAAAA,CAAAA,UAAAA,EAAAA,GAAAA,CAAAA,KAAAA,IAAAA,GAAAA,CAAAA,GAAAA,CAAAA;;;;;;;;;oBDCC,yB,EAAyB,CAAA;UAdrC,SAcqC;WAd3B;AACT,MAAA,QAAQ,EAAK,oBADJ;AAET,MAAA,WAAW,EAAE,qCAFJ;AAGT,MAAA,SAAS,EAAE,CACT,qCADS,CAHF;AAMT,MAAA,SAAS,EAAE,CACT;AACE,QAAA,OAAO,EAAE,iBADX;AAEE,QAAA,WAAW,EAAE,UAAU,CAAC;AAAA,iBAAM,yBAAN;AAAA,SAAD,CAFzB;AAGE,QAAA,KAAK,EAAE;AAHT,OADS;AANF,K;AAc2B,GAAA,C;;;;YACnC,K;aAAM,O;;;YACN,K;aAAM,M;;;YACN,K;aAAM,K;;;YACN,K;aAAM,K;;;YACN,K;aAAM,W;;;YAEN,M;aAAO,Q;;;;;IEPG,sB;;;;;QAAA;;;;qBAAA,sB;AAAsB,G;AAAA,EAAA,OAAA,EAAA,CAJxB,CACP,YADO,CAIwB;;;;wEAAtB,sB,EAAsB;AAAA,IAAA,YAAA,EAAA,CAT/B,yBAS+B,CAAA;AATN,IAAA,OAAA,EAAA,CAMzB,YANyB,CASM;AAHnB,IAAA,OAAA,EAAA,CAHZ,yBAGY;AAGmB,G;AANN,C;;;;;oBAMhB,sB,EAAsB,CAAA;UAXlC,QAWkC;WAXzB;AACR,MAAA,YAAY,EAAE,CACZ,yBADY,CADN;AAIR,MAAA,OAAO,EAAE,CACP,yBADO,CAJD;AAOR,MAAA,OAAO,EAAE,CACP,YADO;AAPD,K;AAWyB,GAAA,C;;ACjBnC;;;;AAAA","sourcesContent":["import { Component, Input, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector:    'ngx-number-spinner',\n  templateUrl: './ngx-number-spinner.component.html',\n  styleUrls: [\n    './ngx-number-spinner.component.scss'\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxNumberSpinnerComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgxNumberSpinnerComponent implements ControlValueAccessor {\n  @Input('value') value: number = 0;\n  @Input('step') step: number = 1;\n  @Input('min') min: number;\n  @Input('max') max: number;\n  @Input('direction') direction: 'horizontal'|'vertical' = 'horizontal';\n\n  @Output('change') change: EventEmitter<number> = new EventEmitter();\n\n  disabled: boolean;\n\n  _propagateChange:any = () => {};\n  _onTouched: () => void;\n\n  constructor() { }\n\n  writeValue(value:number):void {\n    this.value = value || 0;\n  }\n\n  registerOnChange(fn:any):void {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn:any):void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled:boolean):void {\n    this.disabled = isDisabled;\n  }\n\n  inc():void {\n    this.value += this.step;\n    this._onChange();\n  }\n\n  dec():void {\n    this.value -= this.step;\n\n    this._onChange();\n  }\n\n  private _onChange():void {\n    this._propagateChange(this.value);\n\n    this.change.emit(this.value);\n  }\n}\n","<div class=\"wrapper\"\n     [ngClass]=\"{ 'horizontal-wrapper': direction === 'horizontal', 'vertical-wrapper': direction === 'vertical' }\">\n    <button type=\"button\"\n            [class.ripple]=\"!min || value > min\"\n            (click)=\"dec()\"\n            [disabled]=\"value <= min\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M19 13H5v-2h14v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </svg>\n    </button>\n\n    <div>{{ value }}</div>\n\n    <button type=\"button\"\n            [class.ripple]=\"!max || value < max\"\n            (click)=\"inc()\"\n            [disabled]=\"value >= max\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </svg>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { NgxNumberSpinnerComponent } from './ngx-number-spinner/ngx-number-spinner.component';\n\n@NgModule({\n  declarations: [\n    NgxNumberSpinnerComponent\n  ],\n  exports: [\n    NgxNumberSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgxNumberSpinnerModule { }\n","/*\n * Public API Surface of ngx-number-spinner\n */\nexport * from './lib/ngx-number-spinner/ngx-number-spinner.component';\nexport * from './lib/ngx-number-spinner.module';\n"]},"metadata":{},"sourceType":"module"}